

class nesting werkt nog niet


problem case met parent - child finding:
    var a = 1;
    var b = 1;
    if (a == 1)
    {
        b = 2;
    }
            
    // blablabla things happen

    // if a is still 1, make b 2 again!
    // this is plausible...
    if (a == 1)
    {
        b = 2;
    }

de exact zelfde astnode (hier if statement en inhoud) kan voorkomen onder dezelfde parent.
hierdoor krijg je ongewenst resultaat, de ifstatement wordt als dezelfde beschouden bij het afhandelen van child nodes.
  
  statement(ifElseStatement(binaryOperatorExpression(identifierExpression("a",[])[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<15,17>,<15,18>)],equality(),primitiveExpression(1)[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<15,22>,<15,23>)])[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<15,17>,<15,23>)],emptyStatement(),blockStatement([expressionStatement(assignmentExpression(identifierExpression("b",[])[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<17,17>,<17,18>)],assignmentOperatorAssign(),primitiveExpression(2)[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<17,21>,<17,22>)])[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<17,17>,<17,22>)])[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<17,17>,<17,23>)]])[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<16,13>,<18,14>)])[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<15,13>,<18,14>)])
    statement(blockStatement([expressionStatement(assignmentExpression(identifierExpression("b",[])[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<17,17>,<17,18>)],assignmentOperatorAssign(),primitiveExpression(2)[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<17,21>,<17,22>)])[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<17,17>,<17,22>)])[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<17,17>,<17,23>)]])[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<16,13>,<18,14>)])
    statement(emptyStatement())
    statement(blockStatement([expressionStatement(assignmentExpression(identifierExpression("b",[])[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<26,17>,<26,18>)],assignmentOperatorAssign(),primitiveExpression(2)[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<26,21>,<26,22>)])[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<26,17>,<26,22>)])[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<26,17>,<26,23>)]])[@location=|file:///C/Uitvoering/Workspace/git/csharp2rascal/NRefactory/ExampleCode/Item.cs|(0,0,<25,13>,<27,14>)])
    statement(emptyStatement())


=======================

V - public Product product;
X - public List<Product> products;
V - public Product product {get;set;}

Probleem bij resolving types, bij fields met een class-defined-type.
Probleem bestaat niet bij property en field met class-defined-type in subtype. eg. List<Product>.