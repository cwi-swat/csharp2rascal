[cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\ForCase.cs",[namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("ForCase",[],[],class(),[],[memberDeclaration(methodDeclaration("forCase",[],blockStatement([variableDeclarationStatement([modifiersNone(),],[variableInitializer("a",primitiveExpression("dont know m"))],simpleType("var",[])),forStatement(binaryOperatorExpression(identifierExpression("m",[],typePlaceholder()),lessThan(),primitiveExpression(1)),blockStatement([forStatement(binaryOperatorExpression(identifierExpression("i",[],typePlaceholder()),lessThan(),primitiveExpression(0)),blockStatement([expressionStatement(assignmentExpression(identifierExpression("a",[],typePlaceholder()),assignmentOperatorAssign(),primitiveExpression("known m + i"))),expressionStatement(unaryOperatorExpression(identifierExpression("m",[],typePlaceholder()),postIncrement())),ifElseStatement(binaryOperatorExpression(identifierExpression("m",[],typePlaceholder()),equality(),primitiveExpression(1)),emptyStatement(),blockStatement([]))]),[variableDeclarationStatement([modifiersNone(),],[variableInitializer("i",primitiveExpression(0))],primitiveType("int"))],[expressionStatement(unaryOperatorExpression(identifierExpression("i",[],typePlaceholder()),postIncrement()))]),expressionStatement(assignmentExpression(identifierExpression("a",[],typePlaceholder()),assignmentOperatorAssign(),primitiveExpression("Know m")))]),[variableDeclarationStatement([modifiersNone(),],[variableInitializer("m",primitiveExpression(1))],primitiveType("int"))],[expressionStatement(unaryOperatorExpression(identifierExpression("m",[],typePlaceholder()),postDecrement()))]),expressionStatement(assignmentExpression(identifierExpression("a",[],typePlaceholder()),assignmentOperatorAssign(),primitiveExpression("don't know m+i")))]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),])]