[cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Aisle.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("Example_source","Roslyn.Example_source",[],[attributedNode(typeDeclaration("Aisle",[],[],class(),[],[memberDeclaration(fieldDeclaration("Name",[],[],[modifiersPublic(),],[variableInitializer("Name",emptyExpression())],primitiveType("string"))),memberDeclaration(propertyDeclaration("Products",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),simpleType("List",[simpleType("Product",[]),]))),constructorDeclaration("Aisle",[],blockStatementPlaceholder([expressionStatement(assignmentExpression(memberReferenceExpression("Name",thisReferenceExpression(),[]),assignmentOperatorAssign(),identifierExpression("name",[]))),expressionStatement(assignmentExpression(memberReferenceExpression("Products",thisReferenceExpression(),[]),assignmentOperatorAssign(),objectCreateExpression([],emptyExpression(),simpleType("List",[simpleType("Product",[]),]))))]),astNodePlaceholder(),[],[modifiersPublic(),],[parameterDeclaration("name",[],emptyExpression(),parameterModifierNone())]),destructorDeclaration("Aisle",[],blockStatementPlaceholder([expressionStatement(assignmentExpression(memberReferenceExpression("Name",thisReferenceExpression(),[]),assignmentOperatorAssign(),null())),expressionStatement(assignmentExpression(memberReferenceExpression("Products",thisReferenceExpression(),[]),assignmentOperatorAssign(),null()))]),[],[modifiersNone(),])],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Company.cs",[usingDeclaration("System.Collections.Generic"),usingDeclaration("Roslyn.Example_source"),namespaceDeclaration("ExampleCode","ExampleCode",[],[attributedNode(typeDeclaration("Company",[],[],class(),[],[memberDeclaration(propertyDeclaration("Products",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),simpleType("List",[simpleType("Product",[]),])))],[],[modifiersInternal(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\ISellable.cs",[namespaceDeclaration("ExampleCode","ExampleCode",[],[attributedNode(typeDeclaration("ISellable",[],[],interface(),[],[],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Item.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("ExampleCode","ExampleCode",[],[attributedNode(typeDeclaration("Item",[],[simpleType("Object",[]),],class(),[],[memberDeclaration(propertyDeclaration("Description",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),simpleType("String",[]))),memberDeclaration(fieldDeclaration("_field",[],[],[modifiersNone(),],[variableInitializer("_field",primitiveExpression(1)),variableInitializer("_field2",primitiveExpression(3))],primitiveType("int"))),constructorDeclaration("Item",[],blockStatementPlaceholder([variableDeclarationStatement([modifiersNone(),],[variableInitializer("b",primitiveExpression(1))],simpleType("var",[])),expressionStatement(assignmentExpression(identifierExpression("b",[]),assignmentOperatorAssign(),primitiveExpression(3))),ifElseStatement(binaryOperatorExpression(identifierExpression("b",[]),equality(),primitiveExpression(2)),expressionStatement(assignmentExpression(identifierExpression("b",[]),assignmentOperatorAdd(),primitiveExpression(2))),expressionStatement(assignmentExpression(identifierExpression("b",[]),assignmentOperatorAdd(),primitiveExpression(1)))),variableDeclarationStatement([modifiersNone(),],[variableInitializer("cCCCCCCCCCCCCCCCCc",identifierExpression("b",[]))],simpleType("var",[]))]),astNodePlaceholder(),[],[modifiersPublic(),],[])],[],[modifiersPublic(),],[])),attributedNode(typeDeclaration("ItemType",[],[],enum(),[],[enumMemberDeclaration("Created",[],emptyExpression(),[],[modifiersNone(),]),enumMemberDeclaration("Existing",[],emptyExpression(),[],[modifiersNone(),]),enumMemberDeclaration("Deleted",[],emptyExpression(),[],[modifiersNone(),])],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Milk.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),usingDeclaration("Roslyn.Example_source"),namespaceDeclaration("ExampleCode","ExampleCode",[],[attributedNode(typeDeclaration("Milk",[],[simpleType("Product",[]),simpleType("ISellable",[]),],class(),[],[constructorDeclaration("Milk",[],blockStatementPlaceholder([variableDeclarationStatement([modifiersConst(),],[variableInitializer("dag",primitiveExpression(1))],primitiveType("int")),ifElseStatement(binaryOperatorExpression(identifierExpression("type",[]),equality(),primitiveExpression("halfvol")),expressionStatement(assignmentExpression(identifierExpression("ExpireDays",[]),assignmentOperatorAssign(),binaryOperatorExpression(identifierExpression("dag",[]),multiply(),primitiveExpression(3)))),expressionStatement(assignmentExpression(identifierExpression("ExpireDays",[]),assignmentOperatorAssign(),binaryOperatorExpression(identifierExpression("dag",[]),multiply(),primitiveExpression(5)))))]),constructorInitializer([identifierExpression("name",[]),identifierExpression("price",[])],base()),[],[modifiersPublic(),],[parameterDeclaration("name",[],emptyExpression(),parameterModifierNone()),parameterDeclaration("type",[],emptyExpression(),parameterModifierNone()),parameterDeclaration("price",[],primitiveExpression(0),parameterModifierNone())]),memberDeclaration(fieldDeclaration("ExpireDays",[],[],[modifiersPublic(),],[variableInitializer("ExpireDays",emptyExpression())],primitiveType("int"))),memberDeclaration(fieldDeclaration("Type",[],[],[modifiersPublic(),],[variableInitializer("Type",emptyExpression())],primitiveType("string"))),memberDeclaration(fieldDeclaration("company",[],[],[modifiersInternal(),],[variableInitializer("company",emptyExpression())],simpleType("Company",[])))],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Product.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),usingDeclaration("ExampleCode"),namespaceDeclaration("Example_source","Roslyn.Example_source",[],[attributedNode(typeDeclaration("Product",[],[simpleType("Item",[]),],class(),[],[constructorDeclaration("Product",[],blockStatementPlaceholder([expressionStatement(assignmentExpression(memberReferenceExpression("Name",thisReferenceExpression(),[]),assignmentOperatorAssign(),identifierExpression("name",[]))),expressionStatement(assignmentExpression(memberReferenceExpression("Price",thisReferenceExpression(),[]),assignmentOperatorAssign(),identifierExpression("price",[])))]),astNodePlaceholder(),[],[modifiersPublic(),],[parameterDeclaration("name",[],emptyExpression(),parameterModifierNone()),parameterDeclaration("price",[],emptyExpression(),parameterModifierNone())]),memberDeclaration(methodDeclaration("OnSale",[],blockStatementPlaceholder([expressionStatement(assignmentExpression(identifierExpression("IsOnSale",[]),assignmentOperatorAssign(),primitiveExpression(true)))]),[],false,[],[modifiersPublic(),],[],[],primitiveType("void"))),memberDeclaration(propertyDeclaration("Name",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),primitiveType("string"))),memberDeclaration(fieldDeclaration("IsOnSale",[],[],[modifiersPublic(),],[variableInitializer("IsOnSale",primitiveExpression(false))],primitiveType("bool"))),memberDeclaration(fieldDeclaration("_price",[],[],[modifiersPrivate(),],[variableInitializer("_price",emptyExpression())],primitiveType("double"))),memberDeclaration(propertyDeclaration("Price",[],accessor([],blockStatementPlaceholder([returnStatement(conditionalExpression(identifierExpression("IsOnSale",[]),identifierExpression("_price",[]),binaryOperatorExpression(identifierExpression("_price",[]),multiply(),primitiveExpression(0.8))))]),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],blockStatementPlaceholder([expressionStatement(assignmentExpression(identifierExpression("_price",[]),assignmentOperatorAssign(),identifierExpression("value",[])))]),[],[modifiersNone(),]),primitiveType("double")))],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Shopper.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("Example_source","Roslyn.Example_source",[],[attributedNode(typeDeclaration("Shopper",[],[],class(),[],[constructorDeclaration("Shopper",[],blockStatementPlaceholder([expressionStatement(assignmentExpression(memberReferenceExpression("Name",thisReferenceExpression(),[]),assignmentOperatorAssign(),identifierExpression("name",[]))),expressionStatement(assignmentExpression(memberReferenceExpression("Credit",thisReferenceExpression(),[]),assignmentOperatorAssign(),primitiveExpression(100))),expressionStatement(assignmentExpression(memberReferenceExpression("ShoppingCart",thisReferenceExpression(),[]),assignmentOperatorAssign(),objectCreateExpression([thisReferenceExpression()],emptyExpression(),simpleType("ShoppingCart",[]))))]),astNodePlaceholder(),[],[modifiersPublic(),],[parameterDeclaration("name",[],emptyExpression(),parameterModifierNone())]),memberDeclaration(propertyDeclaration("ShoppingCart",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),simpleType("ShoppingCart",[]))),memberDeclaration(propertyDeclaration("Credit",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),primitiveType("int"))),memberDeclaration(propertyDeclaration("Name",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),primitiveType("string")))],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\ShoppingCart.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("Example_source","Roslyn.Example_source",[],[attributedNode(typeDeclaration("ShoppingCart",[],[],class(),[],[constructorDeclaration("ShoppingCart",[],blockStatementPlaceholder([expressionStatement(assignmentExpression(memberReferenceExpression("Owner",thisReferenceExpression(),[]),assignmentOperatorAssign(),identifierExpression("shopper",[]))),expressionStatement(assignmentExpression(memberReferenceExpression("Products",thisReferenceExpression(),[]),assignmentOperatorAssign(),objectCreateExpression([],arrayInitializerExpression([arrayInitializerExpression([objectCreateExpression([primitiveExpression("product a"),primitiveExpression(1)],arrayInitializerExpression([namedExpression(primitiveExpression(true),"IsOnSale")]),simpleType("Product",[]))]),arrayInitializerExpression([objectCreateExpression([primitiveExpression("product b"),primitiveExpression(2)],emptyExpression(),simpleType("Product",[]))])]),simpleType("List",[simpleType("Product",[]),])))),variableDeclarationStatement([modifiersNone(),],[variableInitializer("myint",primitiveExpression(0))],primitiveType("int")),expressionStatement(invocationExpression([namedArgumentExpression(directionExpression(identifierExpression("myint",[]),fieldDirectionOut()),"total")],identifierExpression("TotalProductsAddedToShoppingCarts",[])))]),astNodePlaceholder(),[],[modifiersPublic(),],[parameterDeclaration("shopper",[],emptyExpression(),parameterModifierNone())]),memberDeclaration(propertyDeclaration("Owner",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersPrivate(),]),simpleType("Shopper",[]))),memberDeclaration(propertyDeclaration("Products",[],accessor([],blockStatementPlaceholder([returnStatement(identifierExpression("_products",[]))]),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],blockStatementPlaceholder([expressionStatement(unaryOperatorExpression(identifierExpression("_totalProductsAddedToShippingCarts",[]),postIncrement())),expressionStatement(assignmentExpression(identifierExpression("_products",[]),assignmentOperatorAssign(),identifierExpression("value",[])))]),[],[modifiersNone(),]),simpleType("List",[simpleType("Product",[]),]))),memberDeclaration(fieldDeclaration("_products",[],[],[modifiersPrivate(),],[variableInitializer("_products",emptyExpression())],simpleType("List",[simpleType("Product",[]),]))),memberDeclaration(fieldDeclaration("_totalProductsAddedToShippingCarts",[],[],[modifiersPrivate(),modifiersStatic(),],[variableInitializer("_totalProductsAddedToShippingCarts",emptyExpression())],primitiveType("int"))),memberDeclaration(methodDeclaration("TotalProductsAddedToShoppingCarts",[],blockStatementPlaceholder([expressionStatement(assignmentExpression(identifierExpression("total",[]),assignmentOperatorAssign(),identifierExpression("_totalProductsAddedToShippingCarts",[])))]),[],false,[],[modifiersPublic(),modifiersStatic(),],[parameterDeclaration("total",[],emptyExpression(),parameterModifierOut())],[],primitiveType("void")))],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Store.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("Example_source","Roslyn.Example_source",[],[attributedNode(typeDeclaration("Store",[],[],class(),[],[constructorDeclaration("Store",[],blockStatementPlaceholder([expressionStatement(assignmentExpression(identifierExpression("Name",[]),assignmentOperatorAssign(),identifierExpression("name",[]))),expressionStatement(assignmentExpression(identifierExpression("Aisles",[]),assignmentOperatorAssign(),objectCreateExpression([],emptyExpression(),simpleType("List",[simpleType("Aisle",[]),]))))]),astNodePlaceholder(),[],[modifiersPublic(),],[parameterDeclaration("name",[],emptyExpression(),parameterModifierNone())]),memberDeclaration(propertyDeclaration("Name",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersPrivate(),]),primitiveType("string"))),memberDeclaration(propertyDeclaration("Aisles",[],accessor([],blockStatementPlaceholder([returnStatement(identifierExpression("_aisles",[]))]),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],blockStatementPlaceholder([expressionStatement(assignmentExpression(identifierExpression("_aisles",[]),assignmentOperatorAssign(),identifierExpression("value",[])))]),[],[modifiersNone(),]),simpleType("List",[simpleType("Aisle",[]),]))),memberDeclaration(fieldDeclaration("_aisles",[],[],[modifiersPrivate(),],[variableInitializer("_aisles",emptyExpression())],simpleType("List",[simpleType("Aisle",[]),])))],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\AnonymousMethodCase.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("AnonymousMethodCase",[],[],class(),[],[memberDeclaration(methodDeclaration("anon",[],blockStatementPlaceholder([variableDeclarationStatement([modifiersNone(),],[variableInitializer("n",primitiveExpression(0))],primitiveType("int")),variableDeclarationStatement([modifiersNone(),],[variableInitializer("d",anonymousMethodExpression(blockStatementPlaceholder([expressionStatement(invocationExpression([primitiveExpression("Copy #:{0}{1}{2}{3}{4}{5}"),unaryOperatorExpression(identifierExpression("n",[]),increment()),primitiveExpression(1),primitiveExpression(2),primitiveExpression(3),primitiveExpression(4),primitiveExpression(5)],memberReferenceExpression("WriteLine",memberReferenceExpression("Console",identifierExpression("System",[]),[]),[])))]),true,[]))],simpleType("Action",[])),unsafeStatement(blockStatementPlaceholder([variableDeclarationStatement([modifiersNone(),],[variableInitializer("p",emptyExpression())],composedType([],false,1,primitiveType("int"))),expressionStatement(unaryOperatorExpression(identifierExpression("p",[]),postIncrement()))]))]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\ArraySpecifierCase.cs",[namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("ArraySpecifierCase",[],[],class(),[],[memberDeclaration(fieldDeclaration("arr",[],[],[modifiersNone(),],[variableInitializer("arr",emptyExpression())],composedType([arraySpecifier(1)],false,0,primitiveType("int")))),memberDeclaration(fieldDeclaration("arrInts",[],[],[modifiersNone(),],[variableInitializer("arrInts",arrayCreateExpression([],[primitiveExpression(5)],emptyExpression()))],composedType([arraySpecifier(1)],false,0,primitiveType("int")))),memberDeclaration(fieldDeclaration("arrDimInts",[],[],[modifiersNone(),],[variableInitializer("arrDimInts",arrayCreateExpression([],[primitiveExpression(1),primitiveExpression(2),primitiveExpression(3)],arrayInitializerExpression([arrayInitializerExpression([arrayInitializerExpression([primitiveExpression(1),primitiveExpression(2),primitiveExpression(3)]),arrayInitializerExpression([primitiveExpression(1),primitiveExpression(2),primitiveExpression(3)])])])))],composedType([arraySpecifier(3)],false,0,primitiveType("int"))))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\AttributeCase.cs",[usingDeclaration("System.Diagnostics"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("AttributeCase",[attributeSection("",[attribute([],memberType(false,"Serializable",simpleType("System",[]),[]))])],[],class(),[],[memberDeclaration(methodDeclaration("Method",[attributeSection("",[attribute([primitiveExpression("DEBUG")],simpleType("Conditional",[])),attribute([primitiveExpression("TEST1")],simpleType("Conditional",[]))])],blockStatementPlaceholder([]),[],false,[],[modifiersPrivate(),],[],[],primitiveType("void")))],[],[modifiersInternal(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\CastCase.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("CastCase",[],[],class(),[],[memberDeclaration(fieldDeclaration("a",[],[],[modifiersStatic(),],[variableInitializer("a",emptyExpression())],primitiveType("object"))),memberDeclaration(fieldDeclaration("b",[],[],[modifiersNone(),],[variableInitializer("b",castExpression(identifierExpression("a",[]),primitiveType("int")))],primitiveType("int"))),memberDeclaration(methodDeclaration("AsTest",[],blockStatementPlaceholder([expressionStatement(assignmentExpression(identifierExpression("a",[]),assignmentOperatorAssign(),asExpression(identifierExpression("b",[]),primitiveType("object"))))]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\DoWhileCase.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("DoWhileCase",[],[],class(),[],[memberDeclaration(methodDeclaration("DoWhile",[],blockStatementPlaceholder([variableDeclarationStatement([modifiersNone(),],[variableInitializer("a",primitiveExpression(1))],simpleType("var",[])),doWhileStatement(binaryOperatorExpression(identifierExpression("a",[]),lessThan(),primitiveExpression(5)),blockStatementPlaceholder([expressionStatement(unaryOperatorExpression(identifierExpression("a",[]),postIncrement()))]))]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\EnumCase.cs",[namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("Enum",[],[],enum(),[],[enumMemberDeclaration("A",[],emptyExpression(),[],[modifiersNone(),]),enumMemberDeclaration("B",[],emptyExpression(),[],[modifiersNone(),]),enumMemberDeclaration("C",[],emptyExpression(),[],[modifiersNone(),])],[],[modifiersNone(),],[])),attributedNode(typeDeclaration("Enum2",[],[],enum(),[],[enumMemberDeclaration("A",[],primitiveExpression(2),[],[modifiersNone(),]),enumMemberDeclaration("B",[],primitiveExpression(3),[],[modifiersNone(),]),enumMemberDeclaration("C",[],primitiveExpression(4),[],[modifiersNone(),])],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\EventCase.cs",[usingDeclaration("System"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("EventCase",[],[],class(),[],[delegateDeclaration("MyEventHandler",[],[],[],[modifiersNone(),],[parameterDeclaration("sender",[],emptyExpression(),parameterModifierNone()),parameterDeclaration("e",[],emptyExpression(),parameterModifierNone())],[]),delegateDeclaration("MySecondEventHandler",[],[],[],[modifiersNone(),],[parameterDeclaration("sender",[],emptyExpression(),parameterModifierNone()),parameterDeclaration("e",[],emptyExpression(),parameterModifierNone())],[]),delegateDeclaration("MyThirdEventHandler",[],[],[],[modifiersNone(),],[parameterDeclaration("sender",[],emptyExpression(),parameterModifierNone()),parameterDeclaration("e",[],emptyExpression(),parameterModifierNone())],[typeParameterDeclaration("T",contravariant())]),memberDeclaration(eventDeclaration("",[],[],[modifiersNone(),],[variableInitializer("Event",identifierExpression("EventCase_Event",[]))],simpleType("MyEventHandler",[]))),memberDeclaration(eventDeclaration("",[],[],[modifiersNone(),],[variableInitializer("Event2",emptyExpression())],simpleType("MySecondEventHandler",[]))),memberDeclaration(eventDeclaration("",[],[],[modifiersNone(),],[variableInitializer("Event3",emptyExpression())],simpleType("MyThirdEventHandler",[simpleType("String",[]),]))),memberDeclaration(fieldDeclaration("_onDraw",[],[],[modifiersPrivate(),],[variableInitializer("_onDraw",emptyExpression())],simpleType("EventHandler",[]))),memberDeclaration(customEventDeclaration("OnDraw",accessor([],blockStatementPlaceholder([expressionStatement(assignmentExpression(identifierExpression("_onDraw",[]),assignmentOperatorAdd(),identifierExpression("value",[])))]),[],[modifiersNone(),]),[],[],[modifiersNone(),],accessor([],blockStatementPlaceholder([expressionStatement(assignmentExpression(identifierExpression("_onDraw",[]),assignmentOperatorSubtract(),identifierExpression("value",[])))]),[],[modifiersNone(),]))),constructorDeclaration("EventCase",[],blockStatementPlaceholder([expressionStatement(assignmentExpression(memberReferenceExpression("Event",thisReferenceExpression(),[]),assignmentOperatorAdd(),identifierExpression("EventCase_Event",[]))),expressionStatement(assignmentExpression(memberReferenceExpression("Event2",thisReferenceExpression(),[]),assignmentOperatorAdd(),identifierExpression("EventCase_Event2",[]))),expressionStatement(assignmentExpression(memberReferenceExpression("Event3",thisReferenceExpression(),[]),assignmentOperatorAdd(),identifierExpression("EventCase_Event3",[])))]),astNodePlaceholder(),[],[modifiersPublic(),],[]),memberDeclaration(methodDeclaration("EventCase_Event",[],blockStatementPlaceholder([throwStatement(objectCreateExpression([],emptyExpression(),simpleType("NotImplementedException",[])))]),[],false,[],[modifiersStatic(),],[parameterDeclaration("sender",[],emptyExpression(),parameterModifierNone()),parameterDeclaration("e",[],emptyExpression(),parameterModifierNone())],[],primitiveType("void"))),memberDeclaration(methodDeclaration("EventCase_Event2",[],blockStatementPlaceholder([throwStatement(objectCreateExpression([],emptyExpression(),simpleType("NotImplementedException",[])))]),[],false,[],[modifiersNone(),],[parameterDeclaration("sender",[],emptyExpression(),parameterModifierNone()),parameterDeclaration("e",[],emptyExpression(),parameterModifierNone())],[],simpleType("String",[]))),memberDeclaration(methodDeclaration("EventCase_Event3",[],blockStatementPlaceholder([throwStatement(objectCreateExpression([],emptyExpression(),simpleType("NotImplementedException",[])))]),[],false,[],[modifiersNone(),],[parameterDeclaration("sender",[],emptyExpression(),parameterModifierNone()),parameterDeclaration("e",[],emptyExpression(),parameterModifierNone())],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\fixedUnsafeCheckedUncheckedCase.cs",[namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("Point",[],[],class(),[],[memberDeclaration(fieldDeclaration("x",[],[],[modifiersPublic(),],[variableInitializer("x",emptyExpression())],primitiveType("int"))),memberDeclaration(fieldDeclaration("y",[],[],[modifiersPublic(),],[variableInitializer("y",emptyExpression())],primitiveType("int")))],[],[modifiersNone(),],[])),attributedNode(typeDeclaration("fixedCase",[],[],class(),[],[memberDeclaration(methodDeclaration("TestMethod",[],blockStatementPlaceholder([variableDeclarationStatement([modifiersNone(),],[variableInitializer("pt",objectCreateExpression([],arrayInitializerExpression([namedExpression(checkedExpression(primitiveExpression(1)),"y"),namedExpression(uncheckedExpression(primitiveExpression(1)),"x")]),simpleType("Point",[])))],simpleType("var",[])),unsafeStatement(blockStatementPlaceholder([expressionStatement(assignmentExpression(memberReferenceExpression("x",identifierExpression("pt",[]),[]),assignmentOperatorAssign(),primitiveExpression(1))),fixedStatement(blockStatementPlaceholder([expressionStatement(assignmentExpression(unaryOperatorExpression(identifierExpression("p",[]),dereference()),assignmentOperatorAssign(),primitiveExpression(1)))]),[variableInitializer("p",unaryOperatorExpression(memberReferenceExpression("x",identifierExpression("pt",[]),[]),addressOf()))])])),checkedStatement(blockStatementPlaceholder([expressionStatement(assignmentExpression(memberReferenceExpression("y",identifierExpression("pt",[]),[]),assignmentOperatorAssign(),primitiveExpression(1)))])),uncheckedStatement(blockStatementPlaceholder([expressionStatement(assignmentExpression(identifierExpression("pt",[]),assignmentOperatorAssign(),objectCreateExpression([],emptyExpression(),simpleType("Point",[]))))]))]),[],false,[],[modifiersStatic(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\ForCase.cs",[namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("ForCase",[],[],class(),[],[memberDeclaration(methodDeclaration("forCase",[],blockStatementPlaceholder([forStatement(binaryOperatorExpression(identifierExpression("i",[]),lessThan(),primitiveExpression(6)),blockStatementPlaceholder([expressionStatement(unaryOperatorExpression(identifierExpression("i",[]),postIncrement()))]),[variableDeclarationStatement([modifiersNone(),],[variableInitializer("i",primitiveExpression(0))],primitiveType("int"))],[expressionStatement(unaryOperatorExpression(identifierExpression("i",[]),postIncrement()))])]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\ForEachCase.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("ForEachCase",[],[],class(),[],[memberDeclaration(methodDeclaration("ForEach",[],blockStatementPlaceholder([variableDeclarationStatement([modifiersNone(),],[variableInitializer("list",invocationExpression([primitiveExpression(1),primitiveExpression(10)],memberReferenceExpression("Range",identifierExpression("Enumerable",[]),[])))],simpleType("var",[])),foreachStatement(blockStatementPlaceholder([ifElseStatement(binaryOperatorExpression(binaryOperatorExpression(identifierExpression("i",[]),subtract(),primitiveExpression(5)),greaterThan(),primitiveExpression(0)),emptyStatement(),continueStatement())]),identifierExpression("list",[]),"i")]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\IndexerCase.cs",[namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("IndexerCase",[],[],class(),[],[memberDeclaration(fieldDeclaration("arr",[],[],[modifiersPrivate(),],[variableInitializer("arr",arrayCreateExpression([],[primitiveExpression(100)],emptyExpression()))],composedType([arraySpecifier(1)],false,0,primitiveType("int")))),memberDeclaration(indexerDeclaration("Item",[],accessor([],blockStatementPlaceholder([returnStatement(indexerExpression([identifierExpression("i",[])],identifierExpression("arr",[])))]),[],[modifiersNone(),]),[],[modifiersPublic(),],[parameterDeclaration("i",[],emptyExpression(),parameterModifierNone())],accessor([],blockStatementPlaceholder([expressionStatement(assignmentExpression(indexerExpression([identifierExpression("i",[])],identifierExpression("arr",[])),assignmentOperatorAssign(),identifierExpression("value",[])))]),[],[modifiersNone(),]),primitiveType("int")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\Linq.cs",[usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("Linq",[],[],class(),[],[memberDeclaration(methodDeclaration("_Linq",[],blockStatementPlaceholder([variableDeclarationStatement([modifiersNone(),],[variableInitializer("examples",objectCreateExpression([],emptyExpression(),simpleType("List",[simpleType("example",[]),])))],simpleType("var",[])),variableDeclarationStatement([modifiersNone(),],[variableInitializer("examples2",objectCreateExpression([],emptyExpression(),simpleType("List",[simpleType("example",[]),])))],simpleType("var",[])),variableDeclarationStatement([modifiersNone(),],[variableInitializer("groupings",queryExpression([queryContinuationClause("groups",queryExpression([queryFromClause(identifierExpression("examples",[]),"element"),queryGroupClause(identifierExpression("element",[]),emptyExpression())])),querySelectClause(anonymousTypeCreateExpression([namedExpression(memberReferenceExpression("Key",identifierExpression("groups",[]),[]),"Key"),namedExpression(invocationExpression([],memberReferenceExpression("Count",identifierExpression("groups",[]),[])),"Count")]))]))],simpleType("var",[])),variableDeclarationStatement([modifiersNone(),],[variableInitializer("a",queryExpression([queryFromClause(identifierExpression("examples",[]),"e"),queryOrderClause([queryOrdering(queryOrderingDirectionNone(),memberReferenceExpression("lastname",identifierExpression("e",[]),[]))]),querySelectClause(identifierExpression("e",[]))]))],simpleType("var",[]))]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[])),attributedNode(typeDeclaration("example",[],[],class(),[],[memberDeclaration(fieldDeclaration("firstname",[],[],[modifiersPublic(),],[variableInitializer("firstname",emptyExpression())],primitiveType("string"))),memberDeclaration(fieldDeclaration("lastname",[],[],[modifiersPublic(),],[variableInitializer("lastname",emptyExpression())],primitiveType("string"))),constructorDeclaration("example",[],blockStatementPlaceholder([expressionStatement(assignmentExpression(memberReferenceExpression("firstname",thisReferenceExpression(),[]),assignmentOperatorAssign(),identifierExpression("firstname",[]))),expressionStatement(assignmentExpression(memberReferenceExpression("lastname",thisReferenceExpression(),[]),assignmentOperatorAssign(),identifierExpression("lastname",[])))]),astNodePlaceholder(),[],[modifiersPublic(),],[parameterDeclaration("firstname",[],emptyExpression(),parameterModifierNone()),parameterDeclaration("lastname",[],emptyExpression(),parameterModifierNone())])],[],[modifiersPartial(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\LockCase.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("LockCase",[],[],class(),[],[memberDeclaration(fieldDeclaration("_lock",[],[],[modifiersReadonly(),],[variableInitializer("_lock",objectCreateExpression([],emptyExpression(),primitiveType("object")))],primitiveType("object"))),memberDeclaration(fieldDeclaration("_vulnerableVariable",[],[],[modifiersNone(),],[variableInitializer("_vulnerableVariable",primitiveExpression(50))],primitiveType("double"))),memberDeclaration(methodDeclaration("Lock",[],blockStatementPlaceholder([lockStatement(blockStatementPlaceholder([expressionStatement(assignmentExpression(identifierExpression("_vulnerableVariable",[]),assignmentOperatorSubtract(),primitiveExpression(50)))]),identifierExpression("_lock",[]))]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\SizeOfTypeOfDefaultValueCase.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("SizeOfTypeOfDefaultValueCase",[],[],class(),[],[memberDeclaration(methodDeclaration("test",[],blockStatementPlaceholder([variableDeclarationStatement([modifiersNone(),],[variableInitializer("a",sizeOfExpression())],simpleType("var",[])),variableDeclarationStatement([modifiersNone(),],[variableInitializer("b",binaryOperatorExpression(invocationExpression([],memberReferenceExpression("GetType",identifierExpression("a",[]),[])),equality(),typeOfExpression(simpleType("SizeOfTypeOfDefaultValueCase",[]))))],simpleType("var",[])),expressionStatement(assignmentExpression(identifierExpression("b",[]),assignmentOperatorAssign(),defaultValueExpression(primitiveType("bool"))))]),[],false,[],[modifiersPrivate(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\SwitchCase.cs",[namespaceDeclaration("Specific_cases","ExampleCode.Specific_cases",[],[attributedNode(typeDeclaration("SwitchCase",[],[],class(),[],[memberDeclaration(methodDeclaration("Content",[],blockStatementPlaceholder([variableDeclarationStatement([modifiersNone(),],[variableInitializer("variable",emptyExpression())],primitiveType("string")),switchStatement(identifierExpression("switchOn",[]),[switchSection([caseLabel(primitiveExpression(1)),caseLabel(primitiveExpression(2))],[expressionStatement(assignmentExpression(identifierExpression("variable",[]),assignmentOperatorAssign(),primitiveExpression("<3"))),breakStatement()]),switchSection([caseLabel(primitiveExpression(3))],[expressionStatement(assignmentExpression(identifierExpression("variable",[]),assignmentOperatorAssign(),primitiveExpression("3"))),breakStatement()]),switchSection([caseLabel(primitiveExpression(4))],[expressionStatement(assignmentExpression(identifierExpression("variable",[]),assignmentOperatorAssign(),primitiveExpression("4"))),breakStatement()]),switchSection([caseLabel(emptyExpression())],[expressionStatement(assignmentExpression(identifierExpression("variable",[]),assignmentOperatorAssign(),primitiveExpression("0"))),breakStatement()])]),returnStatement(identifierExpression("variable",[]))]),[],false,[],[modifiersNone(),],[parameterDeclaration("switchOn",[],emptyExpression(),parameterModifierNone())],[],primitiveType("string")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\TryCatch.cs",[usingDeclaration("System"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("TryCatch",[],[],class(),[],[memberDeclaration(methodDeclaration("_TryCatch",[],blockStatementPlaceholder([variableDeclarationStatement([modifiersNone(),],[variableInitializer("a",primitiveExpression("asd"))],primitiveType("object")),tryCatchStatement([catchClause(blockStatementPlaceholder([expressionStatement(assignmentExpression(identifierExpression("ex",[]),assignmentOperatorAssign(),objectCreateExpression([primitiveExpression("error in casting"),identifierExpression("ex",[])],emptyExpression(),simpleType("Exception",[])))),throwStatement(emptyExpression())]),"ex")],blockStatementPlaceholder([expressionStatement(assignmentExpression(identifierExpression("a",[]),assignmentOperatorAssign(),null()))]),blockStatementPlaceholder([expressionStatement(assignmentExpression(identifierExpression("a",[]),assignmentOperatorAssign(),primitiveExpression(1)))]))]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\TypeParameter.cs",[namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("TypeParameter",[],[],class(),[],[memberDeclaration(methodDeclaration("TypeParamete",[],blockStatementPlaceholder([]),[constraint([simpleType("TypeParameter",[]),],simpleType("T",[]))],false,[],[modifiersNone(),],[parameterDeclaration("type",[],emptyExpression(),parameterModifierNone())],[typeParameterDeclaration("T",invariant())],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\UsingAliasCase.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),usingAliasDeclaration("Cat",memberType(false,"Text",simpleType("System",[]),[])),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("UsingAliasCase",[],[],class(),[],[],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\UsingCase.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("UsingCase",[],[simpleType("IDisposable",[]),],class(),[],[memberDeclaration(methodDeclaration("Dispose",[],blockStatementPlaceholder([throwStatement(objectCreateExpression([],emptyExpression(),simpleType("NotImplementedException",[])))]),[],false,[],[modifiersPublic(),],[],[],primitiveType("void"))),memberDeclaration(methodDeclaration("Using",[],blockStatementPlaceholder([usingStatement(blockStatementPlaceholder([]),statement(variableDeclarationStatement([modifiersNone(),],[variableInitializer("Var",objectCreateExpression([],emptyExpression(),simpleType("UsingCase",[])))],simpleType("var",[]))))]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\WhileCase.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("WhileCase",[],[],class(),[],[memberDeclaration(methodDeclaration("While",[],blockStatementPlaceholder([variableDeclarationStatement([modifiersNone(),],[variableInitializer("b",primitiveExpression(0))],primitiveType("int")),variableDeclarationStatement([modifiersNone(),],[variableInitializer("B",primitiveExpression(true))],primitiveType("bool")),whileStatement(identifierExpression("B",[]),blockStatementPlaceholder([expressionStatement(unaryOperatorExpression(identifierExpression("b",[]),postIncrement())),ifElseStatement(binaryOperatorExpression(identifierExpression("b",[]),equality(),primitiveExpression(1)),emptyStatement(),expressionStatement(assignmentExpression(identifierExpression("B",[]),assignmentOperatorAssign(),primitiveExpression(false))))]))]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\yieldCase.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("Abstract",[],[],class(),[],[memberDeclaration(propertyDeclaration("String",[],noAccessor(),[],[modifiersPublic(),modifiersAbstract(),],accessor([],emptyStatement(),[],[modifiersNone(),]),primitiveType("string")))],[],[modifiersPublic(),modifiersAbstract(),],[])),attributedNode(typeDeclaration("yieldCase",[],[],class(),[],[memberDeclaration(propertyDeclaration("NextGalaxy",[],accessor([],blockStatementPlaceholder([yieldStatement(objectCreateExpression([],arrayInitializerExpression([namedExpression(primitiveExpression("Tadpole"),"Name"),namedExpression(primitiveExpression(400),"MegaLightYears")]),simpleType("Galaxy",[]))),yieldStatement(objectCreateExpression([],arrayInitializerExpression([namedExpression(primitiveExpression("Pinwheel"),"Name"),namedExpression(primitiveExpression(25),"MegaLightYears")]),simpleType("Galaxy",[]))),yieldBreakStatement(),yieldStatement(objectCreateExpression([],arrayInitializerExpression([namedExpression(primitiveExpression("Milky Way"),"Name"),namedExpression(primitiveExpression(0),"MegaLightYears")]),simpleType("Galaxy",[]))),yieldStatement(objectCreateExpression([],arrayInitializerExpression([namedExpression(primitiveExpression("Andromeda"),"Name"),namedExpression(primitiveExpression(3),"MegaLightYears")]),simpleType("Galaxy",[])))]),[],[modifiersNone(),]),[],[modifiersPublic(),],noAccessor(),simpleType("IEnumerable",[simpleType("Galaxy",[]),])))],[],[modifiersNone(),],[])),attributedNode(typeDeclaration("Galaxy",[],[],class(),[],[memberDeclaration(propertyDeclaration("Name",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),simpleType("String",[]))),memberDeclaration(propertyDeclaration("MegaLightYears",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),primitiveType("int")))],[],[modifiersPublic(),],[]))]),]),
]