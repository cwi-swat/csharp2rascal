[cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Shopper.cs",[usingDeclaration("ExampleCode"),usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("Example_source","Example_source",[],[attributedNode(typeDeclaration("TestClass",[],[],class(),[],[memberDeclaration(propertyDeclaration("Description",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),primitiveType("string"))),memberDeclaration(fieldDeclaration("StaticField",[],[],[modifiersInternal(),modifiersStatic(),],[variableInitializer("StaticField",emptyExpression())],primitiveType("string"))),memberDeclaration(fieldDeclaration("Name",[],[],[modifiersPrivate(),],[variableInitializer("Name",emptyExpression())],primitiveType("string"))),constructorDeclaration("TestClass",[],blockStatement([expressionStatement(assignmentExpression(memberReferenceExpression("Name",thisReferenceExpression(),[]),assignmentOperatorAssign(),identifierExpression("Name",[],typePlaceholder())))]),astNodePlaceholder(),[],[modifiersPublic(),],[parameterDeclaration("Name",[],emptyExpression(),parameterModifierNone(),primitiveType("string"))]),memberDeclaration(methodDeclaration("DoFunction",[],blockStatement([throwStatement(objectCreateExpression([],emptyExpression(),simpleType("NotImplementedException",[])))]),[],false,[],[modifiersInternal(),],[],[],primitiveType("void"))),memberDeclaration(methodDeclaration("RefFunction",[],blockStatement([throwStatement(objectCreateExpression([],emptyExpression(),simpleType("NotImplementedException",[])))]),[],false,[],[modifiersInternal(),],[parameterDeclaration("p",[],emptyExpression(),parameterModifierRef(),primitiveType("string")),parameterDeclaration("o",[],emptyExpression(),parameterModifierNone(),primitiveType("string"))],[],primitiveType("void"))),memberDeclaration(methodDeclaration("StaticFunction",[],blockStatement([]),[],false,[],[modifiersInternal(),modifiersStatic(),],[],[],primitiveType("void")))],[],[modifiersPublic(),],[])),attributedNode(typeDeclaration("Shopper",[],[],class(),[],[memberDeclaration(fieldDeclaration("shoppingCart",[],[],[modifiersPublic(),],[variableInitializer("shoppingCart",emptyExpression())],simpleType("ShoppingCart",[]))),memberDeclaration(fieldDeclaration("credit",[],[],[modifiersPrivate(),],[variableInitializer("credit",emptyExpression())],primitiveType("int"))),memberDeclaration(fieldDeclaration("Credit",[],[],[modifiersPublic(),],[variableInitializer("Credit",emptyExpression())],primitiveType("int"))),memberDeclaration(propertyDeclaration("Name",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),primitiveType("string"))),memberDeclaration(fieldDeclaration("fieldName",[],[],[modifiersPublic(),],[variableInitializer("fieldName",emptyExpression())],primitiveType("string"))),memberDeclaration(fieldDeclaration("FieldTestClass",[],[],[modifiersPublic(),],[variableInitializer("FieldTestClass",emptyExpression())],simpleType("TestClass",[]))),constructorDeclaration("Shopper",[],blockStatement([expressionStatement(assignmentExpression(memberReferenceExpression("Name",thisReferenceExpression(),[]),assignmentOperatorAssign(),memberReferenceExpression("Description",identifierExpression("testClass",[],exactType("Example_source.TestClass")),[]))),expressionStatement(assignmentExpression(memberReferenceExpression("Credit",thisReferenceExpression(),[]),assignmentOperatorAssign(),primitiveExpression(100))),expressionStatement(invocationExpression([],memberReferenceExpression("DoFunction",identifierExpression("testClass",[],exactType("Example_source.TestClass")),[]))),expressionStatement(assignmentExpression(memberReferenceExpression("Description",identifierExpression("testClass",[],exactType("Example_source.TestClass")),[]),assignmentOperatorAssign(),memberReferenceExpression("Name",thisReferenceExpression(),[]))),expressionStatement(assignmentExpression(memberReferenceExpression("FieldTestClass",thisReferenceExpression(),[]),assignmentOperatorAssign(),objectCreateExpression([identifierExpression("Name",[],typePlaceholder())],emptyExpression(),exactType("Example_source.TestClass"))))]),astNodePlaceholder(),[],[modifiersPublic(),],[parameterDeclaration("testClass",[],emptyExpression(),parameterModifierNone(),exactType("Example_source.TestClass"))]),memberDeclaration(methodDeclaration("Function",[],blockStatement([returnStatement(identifierExpression("a",[],typePlaceholder()))]),[],false,[],[modifiersNone(),],[parameterDeclaration("a",[],emptyExpression(),parameterModifierNone(),primitiveType("string"))],[],simpleType("String",[])))],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Aisle.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("Example_source","Example_source",[],[attributedNode(typeDeclaration("Aisle",[],[],class(),[],[memberDeclaration(fieldDeclaration("Name",[],[],[modifiersPublic(),],[variableInitializer("Name",emptyExpression())],primitiveType("string"))),memberDeclaration(propertyDeclaration("Products",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),simpleType("List",[exactType("Example_source.Product"),]))),constructorDeclaration("Aisle",[],blockStatement([expressionStatement(assignmentExpression(memberReferenceExpression("Name",thisReferenceExpression(),[]),assignmentOperatorAssign(),identifierExpression("name",[],typePlaceholder()))),expressionStatement(assignmentExpression(memberReferenceExpression("Products",thisReferenceExpression(),[]),assignmentOperatorAssign(),objectCreateExpression([],emptyExpression(),simpleType("List",[exactType("Example_source.Product"),]))))]),astNodePlaceholder(),[],[modifiersPublic(),],[parameterDeclaration("name",[],emptyExpression(),parameterModifierNone(),primitiveType("string"))])],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Company.cs",[usingDeclaration("System.Collections.Generic"),usingDeclaration("Example_source"),namespaceDeclaration("ExampleCode","ExampleCode",[],[attributedNode(typeDeclaration("Company",[],[],class(),[],[memberDeclaration(propertyDeclaration("Products",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),exactType("Example_source.Product"))),memberDeclaration(fieldDeclaration("Description",[],[],[modifiersPublic(),],[variableInitializer("Description",emptyExpression())],primitiveType("string"))),memberDeclaration(methodDeclaration("DoFunction",[],blockStatement([returnStatement(emptyExpression())]),[],false,[],[modifiersPublic(),],[],[],primitiveType("void")))],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\ISellable.cs",[namespaceDeclaration("ExampleCode","ExampleCode",[],[attributedNode(typeDeclaration("ISellable",[],[],interface(),[],[],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Item.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("ExampleCode","ExampleCode",[],[attributedNode(typeDeclaration("Item",[],[],class(),[],[constructorDeclaration("Item",[],blockStatement([variableDeclarationStatement([modifiersNone(),],[variableInitializer("a",primitiveExpression(1))],simpleType("var",[])),variableDeclarationStatement([modifiersNone(),],[variableInitializer("b",primitiveExpression(1))],simpleType("var",[])),ifElseStatement(binaryOperatorExpression(identifierExpression("b",[],typePlaceholder()),equality(),identifierExpression("a",[],typePlaceholder())),emptyStatement(),blockStatement([expressionStatement(assignmentExpression(identifierExpression("b",[],typePlaceholder()),assignmentOperatorAdd(),primitiveExpression(2)))]))]),astNodePlaceholder(),[],[modifiersPublic(),],[])],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Milk.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),usingDeclaration("Example_source"),namespaceDeclaration("ExampleCode","ExampleCode",[],[attributedNode(typeDeclaration("Milk",[],[exactType("Example_source.Product"),exactType("ExampleCode.ISellable"),],class(),[],[constructorDeclaration("Milk",[],blockStatement([variableDeclarationStatement([modifiersConst(),],[variableInitializer("dag",primitiveExpression(1))],primitiveType("int")),ifElseStatement(binaryOperatorExpression(identifierExpression("type",[],typePlaceholder()),equality(),primitiveExpression("halfvol")),expressionStatement(assignmentExpression(identifierExpression("ExpireDays",[],typePlaceholder()),assignmentOperatorAssign(),binaryOperatorExpression(identifierExpression("dag",[],typePlaceholder()),multiply(),primitiveExpression(3)))),expressionStatement(assignmentExpression(identifierExpression("ExpireDays",[],typePlaceholder()),assignmentOperatorAssign(),binaryOperatorExpression(identifierExpression("dag",[],typePlaceholder()),multiply(),primitiveExpression(5)))))]),constructorInitializer([identifierExpression("name",[],typePlaceholder()),identifierExpression("price",[],typePlaceholder())],base()),[],[modifiersPublic(),],[parameterDeclaration("name",[],emptyExpression(),parameterModifierNone(),primitiveType("string")),parameterDeclaration("type",[],emptyExpression(),parameterModifierNone(),primitiveType("string")),parameterDeclaration("price",[],primitiveExpression(0),parameterModifierNone(),primitiveType("int"))]),memberDeclaration(fieldDeclaration("ExpireDays",[],[],[modifiersPublic(),],[variableInitializer("ExpireDays",emptyExpression())],primitiveType("int"))),memberDeclaration(fieldDeclaration("Type",[],[],[modifiersPublic(),],[variableInitializer("Type",emptyExpression())],primitiveType("string"))),memberDeclaration(propertyDeclaration("company",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),exactType("ExampleCode.Company")))],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Product.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),usingDeclaration("ExampleCode"),namespaceDeclaration("Example_source","Example_source",[],[attributedNode(typeDeclaration("Product",[],[exactType("ExampleCode.Item"),],class(),[],[constructorDeclaration("Product",[],blockStatement([variableDeclarationStatement([modifiersNone(),],[variableInitializer("a",primitiveExpression(1))],simpleType("var",[])),expressionStatement(assignmentExpression(identifierExpression("a",[],typePlaceholder()),assignmentOperatorAdd(),primitiveExpression(2))),expressionStatement(assignmentExpression(identifierExpression("Name",[],typePlaceholder()),assignmentOperatorAssign(),identifierExpression("name",[],typePlaceholder()))),expressionStatement(assignmentExpression(memberReferenceExpression("Price",thisReferenceExpression(),[]),assignmentOperatorAssign(),identifierExpression("price",[],typePlaceholder()))),variableDeclarationStatement([modifiersNone(),],[variableInitializer("bl",primitiveExpression(true))],primitiveType("bool")),expressionStatement(assignmentExpression(identifierExpression("bl",[],typePlaceholder()),assignmentOperatorAssign(),memberReferenceExpression("IsOnSale",thisReferenceExpression(),[]))),ifElseStatement(conditionalExpression(identifierExpression("IsOnSale",[],typePlaceholder()),primitiveExpression(true),primitiveExpression(false)),emptyStatement(),blockStatement([])),switchStatement(conditionalExpression(binaryOperatorExpression(identifierExpression("a",[],typePlaceholder()),equality(),primitiveExpression(2)),primitiveExpression(4),primitiveExpression(3)),[switchSection([caseLabel(primitiveExpression(3))],[breakStatement()])]),forStatement(binaryOperatorExpression(identifierExpression("i",[],typePlaceholder()),lessThan(),primitiveExpression(1)),blockStatement([]),[variableDeclarationStatement([modifiersNone(),],[variableInitializer("i",conditionalExpression(binaryOperatorExpression(identifierExpression("a",[],typePlaceholder()),equality(),primitiveExpression(2)),primitiveExpression(4),primitiveExpression(3)))],primitiveType("int"))],[expressionStatement(unaryOperatorExpression(identifierExpression("i",[],typePlaceholder()),postIncrement()))]),variableDeclarationStatement([modifiersNone(),],[variableInitializer("b",arrayCreateExpression([arraySpecifier(1)],[],arrayInitializerExpression([primitiveExpression(1),primitiveExpression(2)])))],simpleType("var",[])),variableDeclarationStatement([modifiersNone(),],[variableInitializer("c",arrayCreateExpression([arraySpecifier(1)],[],arrayInitializerExpression([primitiveExpression(3),primitiveExpression(4)])))],simpleType("var",[])),foreachStatement(blockStatement([]),conditionalExpression(identifierExpression("IsOnSale",[],typePlaceholder()),identifierExpression("c",[],exactType("System.Int32[]")),identifierExpression("b",[],exactType("System.Int32[]"))),"item"),variableDeclarationStatement([modifiersNone(),],[variableInitializer("p",objectCreateExpression([conditionalExpression(identifierExpression("IsOnSale",[],typePlaceholder()),primitiveExpression("c"),primitiveExpression("b")),primitiveExpression(0)],emptyExpression(),exactType("Example_source.Product")))],simpleType("var",[]))]),astNodePlaceholder(),[],[modifiersPublic(),],[parameterDeclaration("name",[],emptyExpression(),parameterModifierNone(),primitiveType("string")),parameterDeclaration("price",[],emptyExpression(),parameterModifierNone(),primitiveType("double"))]),memberDeclaration(methodDeclaration("OnSale",[],blockStatement([expressionStatement(assignmentExpression(identifierExpression("IsOnSale",[],typePlaceholder()),assignmentOperatorAssign(),primitiveExpression(true)))]),[],false,[],[modifiersPublic(),],[],[],primitiveType("void"))),memberDeclaration(propertyDeclaration("Name",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),primitiveType("string"))),memberDeclaration(fieldDeclaration("IsOnSale",[],[],[modifiersPublic(),],[variableInitializer("IsOnSale",primitiveExpression(false))],primitiveType("bool"))),memberDeclaration(fieldDeclaration("_price",[],[],[modifiersPrivate(),],[variableInitializer("_price",emptyExpression())],primitiveType("double"))),memberDeclaration(propertyDeclaration("Price",[],accessor([],blockStatement([returnStatement(conditionalExpression(identifierExpression("IsOnSale",[],typePlaceholder()),identifierExpression("_price",[],typePlaceholder()),binaryOperatorExpression(identifierExpression("_price",[],typePlaceholder()),multiply(),primitiveExpression(0.8))))]),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],blockStatement([expressionStatement(assignmentExpression(identifierExpression("_price",[],typePlaceholder()),assignmentOperatorAssign(),identifierExpression("value",[],typePlaceholder())))]),[],[modifiersNone(),]),primitiveType("double")))],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Shopper.cs",[usingDeclaration("ExampleCode"),usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("Example_source","Example_source",[],[attributedNode(typeDeclaration("TestClass",[],[],class(),[],[memberDeclaration(propertyDeclaration("Description",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),primitiveType("string"))),memberDeclaration(fieldDeclaration("StaticField",[],[],[modifiersInternal(),modifiersStatic(),],[variableInitializer("StaticField",emptyExpression())],primitiveType("string"))),memberDeclaration(fieldDeclaration("Name",[],[],[modifiersPrivate(),],[variableInitializer("Name",emptyExpression())],primitiveType("string"))),constructorDeclaration("TestClass",[],blockStatement([expressionStatement(assignmentExpression(memberReferenceExpression("Name",thisReferenceExpression(),[]),assignmentOperatorAssign(),identifierExpression("Name",[],typePlaceholder())))]),astNodePlaceholder(),[],[modifiersPublic(),],[parameterDeclaration("Name",[],emptyExpression(),parameterModifierNone(),primitiveType("string"))]),memberDeclaration(methodDeclaration("DoFunction",[],blockStatement([throwStatement(objectCreateExpression([],emptyExpression(),simpleType("NotImplementedException",[])))]),[],false,[],[modifiersInternal(),],[],[],primitiveType("void"))),memberDeclaration(methodDeclaration("RefFunction",[],blockStatement([throwStatement(objectCreateExpression([],emptyExpression(),simpleType("NotImplementedException",[])))]),[],false,[],[modifiersInternal(),],[parameterDeclaration("p",[],emptyExpression(),parameterModifierRef(),primitiveType("string")),parameterDeclaration("o",[],emptyExpression(),parameterModifierNone(),primitiveType("string"))],[],primitiveType("void"))),memberDeclaration(methodDeclaration("StaticFunction",[],blockStatement([]),[],false,[],[modifiersInternal(),modifiersStatic(),],[],[],primitiveType("void")))],[],[modifiersPublic(),],[])),attributedNode(typeDeclaration("Shopper",[],[],class(),[],[memberDeclaration(fieldDeclaration("shoppingCart",[],[],[modifiersPublic(),],[variableInitializer("shoppingCart",emptyExpression())],simpleType("ShoppingCart",[]))),memberDeclaration(fieldDeclaration("credit",[],[],[modifiersPrivate(),],[variableInitializer("credit",emptyExpression())],primitiveType("int"))),memberDeclaration(fieldDeclaration("Credit",[],[],[modifiersPublic(),],[variableInitializer("Credit",emptyExpression())],primitiveType("int"))),memberDeclaration(propertyDeclaration("Name",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),]),primitiveType("string"))),memberDeclaration(fieldDeclaration("fieldName",[],[],[modifiersPublic(),],[variableInitializer("fieldName",emptyExpression())],primitiveType("string"))),memberDeclaration(fieldDeclaration("FieldTestClass",[],[],[modifiersPublic(),],[variableInitializer("FieldTestClass",emptyExpression())],simpleType("TestClass",[]))),constructorDeclaration("Shopper",[],blockStatement([expressionStatement(assignmentExpression(memberReferenceExpression("Name",thisReferenceExpression(),[]),assignmentOperatorAssign(),memberReferenceExpression("Description",identifierExpression("testClass",[],exactType("Example_source.TestClass")),[]))),expressionStatement(assignmentExpression(memberReferenceExpression("Credit",thisReferenceExpression(),[]),assignmentOperatorAssign(),primitiveExpression(100))),expressionStatement(invocationExpression([],memberReferenceExpression("DoFunction",identifierExpression("testClass",[],exactType("Example_source.TestClass")),[]))),expressionStatement(assignmentExpression(memberReferenceExpression("Description",identifierExpression("testClass",[],exactType("Example_source.TestClass")),[]),assignmentOperatorAssign(),memberReferenceExpression("Name",thisReferenceExpression(),[]))),expressionStatement(assignmentExpression(memberReferenceExpression("FieldTestClass",thisReferenceExpression(),[]),assignmentOperatorAssign(),objectCreateExpression([identifierExpression("Name",[],typePlaceholder())],emptyExpression(),exactType("Example_source.TestClass"))))]),astNodePlaceholder(),[],[modifiersPublic(),],[parameterDeclaration("testClass",[],emptyExpression(),parameterModifierNone(),exactType("Example_source.TestClass"))]),memberDeclaration(methodDeclaration("Function",[],blockStatement([returnStatement(identifierExpression("a",[],typePlaceholder()))]),[],false,[],[modifiersNone(),],[parameterDeclaration("a",[],emptyExpression(),parameterModifierNone(),primitiveType("string"))],[],simpleType("String",[])))],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\ShoppingCart.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("Example_source","Example_source",[],[attributedNode(typeDeclaration("ShoppingCart",[],[],class(),[],[constructorDeclaration("ShoppingCart",[],blockStatement([expressionStatement(assignmentExpression(memberReferenceExpression("Owner",thisReferenceExpression(),[]),assignmentOperatorAssign(),identifierExpression("shopper",[],exactType("Example_source.Shopper")))),expressionStatement(assignmentExpression(memberReferenceExpression("Products",thisReferenceExpression(),[]),assignmentOperatorAssign(),objectCreateExpression([],arrayInitializerExpression([arrayInitializerExpression([objectCreateExpression([primitiveExpression("product a"),primitiveExpression(1)],arrayInitializerExpression([namedExpression(primitiveExpression(true),"IsOnSale")]),exactType("Example_source.Product"))]),arrayInitializerExpression([objectCreateExpression([primitiveExpression("product b"),primitiveExpression(2)],emptyExpression(),exactType("Example_source.Product"))])]),simpleType("List",[exactType("Example_source.Product"),])))),variableDeclarationStatement([modifiersNone(),],[variableInitializer("myint",primitiveExpression(0))],primitiveType("int")),expressionStatement(invocationExpression([namedArgumentExpression(directionExpression(identifierExpression("myint",[],typePlaceholder()),fieldDirectionOut()),"total")],identifierExpression("TotalProductsAddedToShoppingCarts",[],typePlaceholder())))]),astNodePlaceholder(),[],[modifiersPublic(),],[parameterDeclaration("shopper",[],emptyExpression(),parameterModifierNone(),exactType("Example_source.Shopper"))]),memberDeclaration(propertyDeclaration("Owner",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersPrivate(),]),exactType("Example_source.Shopper"))),memberDeclaration(propertyDeclaration("Products",[],accessor([],blockStatement([returnStatement(identifierExpression("_products",[],typePlaceholder()))]),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],blockStatement([expressionStatement(unaryOperatorExpression(identifierExpression("_totalProductsAddedToShippingCarts",[],typePlaceholder()),postIncrement())),expressionStatement(assignmentExpression(identifierExpression("_products",[],typePlaceholder()),assignmentOperatorAssign(),identifierExpression("value",[],typePlaceholder())))]),[],[modifiersNone(),]),simpleType("List",[exactType("Example_source.Product"),]))),memberDeclaration(fieldDeclaration("_products",[],[],[modifiersPrivate(),],[variableInitializer("_products",emptyExpression())],simpleType("List",[exactType("Example_source.Product"),]))),memberDeclaration(fieldDeclaration("_totalProductsAddedToShippingCarts",[],[],[modifiersPrivate(),modifiersStatic(),],[variableInitializer("_totalProductsAddedToShippingCarts",emptyExpression())],primitiveType("int"))),memberDeclaration(methodDeclaration("TotalProductsAddedToShoppingCarts",[],blockStatement([expressionStatement(assignmentExpression(identifierExpression("total",[],typePlaceholder()),assignmentOperatorAssign(),identifierExpression("_totalProductsAddedToShippingCarts",[],typePlaceholder())))]),[],false,[],[modifiersPublic(),modifiersStatic(),],[parameterDeclaration("total",[],emptyExpression(),parameterModifierOut(),primitiveType("int"))],[],primitiveType("void"))),memberDeclaration(methodDeclaration("AddToShoppingCart",[],blockStatement([returnStatement(primitiveExpression(true))]),[],false,[],[modifiersPublic(),modifiersStatic(),],[parameterDeclaration("sc",[],emptyExpression(),parameterModifierNone(),exactType("Example_source.ShoppingCart")),parameterDeclaration("p",[],emptyExpression(),parameterModifierNone(),exactType("Example_source.Product"))],[],primitiveType("bool")))],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Store.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("Example_source","Example_source",[],[attributedNode(typeDeclaration("Store",[],[],class(),[],[constructorDeclaration("Store",[],blockStatement([expressionStatement(assignmentExpression(identifierExpression("Name",[],typePlaceholder()),assignmentOperatorAssign(),identifierExpression("name",[],typePlaceholder()))),expressionStatement(assignmentExpression(identifierExpression("Aisles",[],typePlaceholder()),assignmentOperatorAssign(),objectCreateExpression([],emptyExpression(),simpleType("List",[exactType("Example_source.Aisle"),]))))]),astNodePlaceholder(),[],[modifiersPublic(),],[parameterDeclaration("name",[],emptyExpression(),parameterModifierNone(),primitiveType("string"))]),memberDeclaration(propertyDeclaration("Name",[],accessor([],emptyStatement(),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersPrivate(),]),primitiveType("string"))),memberDeclaration(propertyDeclaration("Aisles",[],accessor([],blockStatement([returnStatement(identifierExpression("_aisles",[],typePlaceholder()))]),[],[modifiersNone(),]),[],[modifiersPublic(),],accessor([],blockStatement([expressionStatement(assignmentExpression(identifierExpression("_aisles",[],typePlaceholder()),assignmentOperatorAssign(),identifierExpression("value",[],typePlaceholder())))]),[],[modifiersNone(),]),simpleType("List",[exactType("Example_source.Aisle"),]))),memberDeclaration(fieldDeclaration("_aisles",[],[],[modifiersPrivate(),],[variableInitializer("_aisles",emptyExpression())],simpleType("List",[exactType("Example_source.Aisle"),])))],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Test.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("ExampleCode","ExampleCode",[],[attributedNode(typeDeclaration("Test",[],[],class(),[],[constructorDeclaration("Test",[],blockStatement([variableDeclarationStatement([modifiersNone(),],[variableInitializer("a",objectCreateExpression([],emptyExpression(),exactType("ExampleCode.SubTest")))],simpleType("var",[]))]),astNodePlaceholder(),[],[modifiersPublic(),],[])],[],[modifiersNone(),],[])),attributedNode(typeDeclaration("SubTest",[],[],class(),[],[],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\ArraySpecifierCase.cs",[namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("ArraySpecifierCase",[],[],class(),[],[constructorDeclaration("ArraySpecifierCase",[],blockStatement([variableDeclarationStatement([modifiersNone(),],[variableInitializer("a",primitiveExpression(2))],simpleType("var",[])),variableDeclarationStatement([modifiersNone(),],[variableInitializer("arr",emptyExpression())],composedType([arraySpecifier(1)],false,0,primitiveType("int"))),variableDeclarationStatement([modifiersNone(),],[variableInitializer("arrInts",arrayCreateExpression([],[primitiveExpression(5)],emptyExpression()))],composedType([arraySpecifier(1)],false,0,primitiveType("int"))),variableDeclarationStatement([modifiersNone(),],[variableInitializer("arrDimInts",arrayCreateExpression([],[primitiveExpression(1),primitiveExpression(2),primitiveExpression(3)],arrayInitializerExpression([arrayInitializerExpression([arrayInitializerExpression([primitiveExpression(1),primitiveExpression(2),primitiveExpression(3)]),arrayInitializerExpression([primitiveExpression(1),primitiveExpression(2),primitiveExpression(3)])])])))],composedType([arraySpecifier(3)],false,0,primitiveType("int")))]),astNodePlaceholder(),[],[modifiersPublic(),],[])],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\CastCase.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("CastCase",[],[],class(),[],[memberDeclaration(fieldDeclaration("a",[],[],[modifiersStatic(),],[variableInitializer("a",emptyExpression())],primitiveType("object"))),memberDeclaration(fieldDeclaration("b",[],[],[modifiersNone(),],[variableInitializer("b",castExpression(identifierExpression("a",[],typePlaceholder()),primitiveType("int")))],primitiveType("int"))),memberDeclaration(methodDeclaration("AsTest",[],blockStatement([expressionStatement(assignmentExpression(identifierExpression("a",[],typePlaceholder()),assignmentOperatorAssign(),asExpression(identifierExpression("b",[],typePlaceholder()),primitiveType("object"))))]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\DoWhileCase.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("DoWhileCase",[],[],class(),[],[memberDeclaration(methodDeclaration("DoWhile",[],blockStatement([variableDeclarationStatement([modifiersNone(),],[variableInitializer("a",primitiveExpression(1))],simpleType("var",[])),doWhileStatement(binaryOperatorExpression(identifierExpression("a",[],typePlaceholder()),equality(),primitiveExpression(2)),blockStatement([expressionStatement(unaryOperatorExpression(identifierExpression("a",[],typePlaceholder()),postIncrement())),expressionStatement(assignmentExpression(identifierExpression("a",[],typePlaceholder()),assignmentOperatorAssign(),primitiveExpression(4)))]))]),[],false,[],[modifiersPublic(),],[],[],primitiveType("void")))],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\ForCase.cs",[namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("ForCase",[],[],class(),[],[memberDeclaration(methodDeclaration("forCase",[],blockStatement([variableDeclarationStatement([modifiersNone(),],[variableInitializer("a",primitiveExpression("dont know m"))],simpleType("var",[])),forStatement(binaryOperatorExpression(identifierExpression("m",[],typePlaceholder()),lessThan(),primitiveExpression(1)),blockStatement([forStatement(binaryOperatorExpression(identifierExpression("i",[],typePlaceholder()),lessThan(),primitiveExpression(0)),blockStatement([expressionStatement(assignmentExpression(identifierExpression("a",[],typePlaceholder()),assignmentOperatorAssign(),primitiveExpression("known m + i"))),expressionStatement(unaryOperatorExpression(identifierExpression("m",[],typePlaceholder()),postIncrement())),ifElseStatement(binaryOperatorExpression(identifierExpression("m",[],typePlaceholder()),equality(),primitiveExpression(1)),emptyStatement(),blockStatement([]))]),[variableDeclarationStatement([modifiersNone(),],[variableInitializer("i",primitiveExpression(0))],primitiveType("int"))],[expressionStatement(unaryOperatorExpression(identifierExpression("i",[],typePlaceholder()),postIncrement()))]),expressionStatement(assignmentExpression(identifierExpression("a",[],typePlaceholder()),assignmentOperatorAssign(),primitiveExpression("Know m")))]),[variableDeclarationStatement([modifiersNone(),],[variableInitializer("m",primitiveExpression(1))],primitiveType("int"))],[expressionStatement(unaryOperatorExpression(identifierExpression("m",[],typePlaceholder()),postDecrement()))]),expressionStatement(assignmentExpression(identifierExpression("a",[],typePlaceholder()),assignmentOperatorAssign(),primitiveExpression("don't know m+i")))]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\ForEachCase.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("ForEachCase",[],[],class(),[],[memberDeclaration(methodDeclaration("ForEach",[],blockStatement([variableDeclarationStatement([modifiersNone(),],[variableInitializer("list",arrayCreateExpression([arraySpecifier(1)],[],arrayInitializerExpression([primitiveExpression(1),primitiveExpression(2),primitiveExpression(3),primitiveExpression(4)])))],simpleType("var",[])),foreachStatement(blockStatement([ifElseStatement(binaryOperatorExpression(binaryOperatorExpression(identifierExpression("i",[],typePlaceholder()),subtract(),primitiveExpression(5)),greaterThan(),primitiveExpression(0)),emptyStatement(),blockStatement([variableDeclarationStatement([modifiersNone(),],[variableInitializer("j",identifierExpression("i",[],typePlaceholder()))],simpleType("var",[]))]))]),identifierExpression("list",[],exactType("System.Int32[]")),"i")]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\Linq.cs",[usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("Linq",[],[],class(),[],[memberDeclaration(methodDeclaration("_Linq",[],blockStatement([variableDeclarationStatement([modifiersNone(),],[variableInitializer("examples",objectCreateExpression([],emptyExpression(),simpleType("List",[exactType("ExampleCode.SpecificCases.example"),])))],simpleType("var",[])),variableDeclarationStatement([modifiersNone(),],[variableInitializer("examples2",objectCreateExpression([],emptyExpression(),simpleType("List",[exactType("ExampleCode.SpecificCases.example"),])))],simpleType("var",[])),variableDeclarationStatement([modifiersNone(),],[variableInitializer("a",queryExpression([queryFromClause(identifierExpression("examples",[],typePlaceholder()),"l1"),queryOrderClause([queryOrdering(queryOrderingDirectionNone(),memberReferenceExpression("lastname",identifierExpression("l1",[],typePlaceholder()),[]))]),queryWhereClause(binaryOperatorExpression(memberReferenceExpression("firstname",identifierExpression("l1",[],typePlaceholder()),[]),equality(),primitiveExpression("a"))),querySelectClause(identifierExpression("l1",[],typePlaceholder()))]))],simpleType("var",[])),foreachStatement(blockStatement([]),queryExpression([queryFromClause(identifierExpression("examples",[],typePlaceholder()),"l2"),queryOrderClause([queryOrdering(queryOrderingDirectionNone(),memberReferenceExpression("firstname",identifierExpression("l2",[],typePlaceholder()),[]))]),querySelectClause(identifierExpression("l2",[],typePlaceholder()))]),"item")]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[])),attributedNode(typeDeclaration("example",[],[],class(),[],[memberDeclaration(fieldDeclaration("firstname",[],[],[modifiersPublic(),],[variableInitializer("firstname",emptyExpression())],primitiveType("string"))),memberDeclaration(fieldDeclaration("lastname",[],[],[modifiersPublic(),],[variableInitializer("lastname",emptyExpression())],primitiveType("string"))),constructorDeclaration("example",[],blockStatement([expressionStatement(assignmentExpression(memberReferenceExpression("firstname",thisReferenceExpression(),[]),assignmentOperatorAssign(),identifierExpression("firstname",[],typePlaceholder()))),expressionStatement(assignmentExpression(memberReferenceExpression("lastname",thisReferenceExpression(),[]),assignmentOperatorAssign(),identifierExpression("lastname",[],typePlaceholder())))]),astNodePlaceholder(),[],[modifiersPublic(),],[parameterDeclaration("firstname",[],emptyExpression(),parameterModifierNone(),primitiveType("string")),parameterDeclaration("lastname",[],emptyExpression(),parameterModifierNone(),primitiveType("string"))])],[],[modifiersPartial(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\SwitchCase.cs",[namespaceDeclaration("Specific_cases","ExampleCode.Specific_cases",[],[attributedNode(typeDeclaration("SwitchCase",[],[],class(),[],[memberDeclaration(methodDeclaration("Content",[],blockStatement([expressionStatement(assignmentExpression(identifierExpression("switchOn",[],typePlaceholder()),assignmentOperatorAssign(),primitiveExpression(2))),variableDeclarationStatement([modifiersNone(),],[variableInitializer("variable",primitiveExpression("a"))],primitiveType("string")),ifElseStatement(binaryOperatorExpression(identifierExpression("switchOn",[],typePlaceholder()),equality(),primitiveExpression(3)),emptyStatement(),blockStatement([expressionStatement(assignmentExpression(identifierExpression("variable",[],typePlaceholder()),assignmentOperatorAssign(),primitiveExpression("b")))])),ifElseStatement(binaryOperatorExpression(identifierExpression("switchOn",[],typePlaceholder()),equality(),primitiveExpression(2)),emptyStatement(),blockStatement([expressionStatement(assignmentExpression(identifierExpression("variable",[],typePlaceholder()),assignmentOperatorAssign(),primitiveExpression("c")))])),switchStatement(identifierExpression("switchOn",[],typePlaceholder()),[switchSection([caseLabel(primitiveExpression(3))],[expressionStatement(assignmentExpression(identifierExpression("variable",[],typePlaceholder()),assignmentOperatorAssign(),primitiveExpression("3"))),breakStatement()]),switchSection([caseLabel(primitiveExpression(4))],[expressionStatement(assignmentExpression(identifierExpression("variable",[],typePlaceholder()),assignmentOperatorAssign(),primitiveExpression("4"))),breakStatement()])]),returnStatement(identifierExpression("variable",[],typePlaceholder()))]),[],false,[],[modifiersNone(),],[parameterDeclaration("switchOn",[],emptyExpression(),parameterModifierNone(),primitiveType("int"))],[],primitiveType("string")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\TryCatch.cs",[usingDeclaration("System"),usingDeclaration("System.Linq"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("TryCatch",[],[],class(),[],[memberDeclaration(methodDeclaration("_TryCatch",[],blockStatement([variableDeclarationStatement([modifiersNone(),],[variableInitializer("myreturn",primitiveExpression(0))],simpleType("var",[])),tryCatchStatement(blockStatement([expressionStatement(assignmentExpression(identifierExpression("myreturn",[],typePlaceholder()),assignmentOperatorAssign(),primitiveExpression(1))),throwStatement(objectCreateExpression([primitiveExpression("blaa")],emptyExpression(),simpleType("Exception",[])))]),[catchClause(blockStatement([expressionStatement(assignmentExpression(identifierExpression("myreturn",[],typePlaceholder()),assignmentOperatorAssign(),primitiveExpression(2))),expressionStatement(assignmentExpression(identifierExpression("ex",[],typePlaceholder()),assignmentOperatorAssign(),objectCreateExpression([primitiveExpression("error in casting"),identifierExpression("ex",[],typePlaceholder())],emptyExpression(),simpleType("Exception",[])))),throwStatement(emptyExpression())]),"ex",simpleType("Exception",[]))],emptyStatement()),returnStatement(identifierExpression("myreturn",[],typePlaceholder()))]),[],false,[],[modifiersPublic(),],[],[],primitiveType("int")))],[],[modifiersPublic(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\UsingCase.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("UsingCase",[],[simpleType("IDisposable",[]),],class(),[],[memberDeclaration(methodDeclaration("Dispose",[],blockStatement([throwStatement(objectCreateExpression([],emptyExpression(),simpleType("NotImplementedException",[])))]),[],false,[],[modifiersPublic(),],[],[],primitiveType("void"))),memberDeclaration(methodDeclaration("Using",[],blockStatement([usingStatement(statement(variableDeclarationStatement([modifiersNone(),],[variableInitializer("Var",objectCreateExpression([],emptyExpression(),exactType("ExampleCode.SpecificCases.UsingCase"))),variableInitializer("Dar",objectCreateExpression([],emptyExpression(),exactType("ExampleCode.SpecificCases.UsingCase")))],simpleType("UsingCase",[]))),blockStatement([variableDeclarationStatement([modifiersNone(),],[variableInitializer("a",primitiveExpression(1))],simpleType("var",[])),expressionStatement(invocationExpression([],memberReferenceExpression("Using",identifierExpression("Var",[],exactType("ExampleCode.SpecificCases.UsingCase")),[])))]))]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\SpecificCases\\WhileCase.cs",[usingDeclaration("System"),usingDeclaration("System.Collections.Generic"),usingDeclaration("System.Linq"),usingDeclaration("System.Text"),usingDeclaration("System.Threading.Tasks"),namespaceDeclaration("SpecificCases","ExampleCode.SpecificCases",[],[attributedNode(typeDeclaration("WhileCase",[],[],class(),[],[memberDeclaration(methodDeclaration("While",[],blockStatement([variableDeclarationStatement([modifiersNone(),],[variableInitializer("b",primitiveExpression(0))],primitiveType("int")),variableDeclarationStatement([modifiersNone(),],[variableInitializer("B",primitiveExpression(true))],primitiveType("bool")),whileStatement(identifierExpression("B",[],typePlaceholder()),blockStatement([expressionStatement(unaryOperatorExpression(identifierExpression("b",[],typePlaceholder()),postIncrement())),ifElseStatement(binaryOperatorExpression(identifierExpression("b",[],typePlaceholder()),equality(),primitiveExpression(1)),emptyStatement(),expressionStatement(assignmentExpression(identifierExpression("B",[],typePlaceholder()),assignmentOperatorAssign(),primitiveExpression(false))))]))]),[],false,[],[modifiersNone(),],[],[],primitiveType("void")))],[],[modifiersNone(),],[]))]),]),
]