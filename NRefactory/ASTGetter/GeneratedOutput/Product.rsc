[cSharpFile("C:\\Uitvoering\\Workspace\\git\\csharp2rascal\\NRefactory\\ExampleCode\\Product.cs",[
usingDeclaration("System"),
usingDeclaration("System.Collections.Generic"),
usingDeclaration("System.Linq"),
usingDeclaration("System.Text"),
usingDeclaration("System.Threading.Tasks"),
usingDeclaration("ExampleCode"),
namespaceDeclaration("Example_source","Roslyn.Example_source",[],
[attributedNode(typeDeclaration("Product",[],[simpleType("Item",[]),],class(),[],
[constructorDeclaration("Product",[],blockStatementPlaceholder(
[expressionStatement(assignmentExpression(memberReferenceExpression("Name",thisReferenceExpression(),[]),assignmentOperatorAssign(),identifierExpression("name",[]),)
),
expressionStatement(assignmentExpression(memberReferenceExpression("Price",thisReferenceExpression(),[]),assignmentOperatorAssign(),identifierExpression("price",[]),)
)]),astNodePlaceholder(),[],[modifiersPublic(),],
[parameterDeclaration("name",[],expressionPlaceholder(),parameterModifierNone())
,
parameterDeclaration("price",[],expressionPlaceholder(),parameterModifierNone())
],)
,
memberDeclaration(methodDeclaration("OnSale",[],blockStatementPlaceholder(
[expressionStatement(assignmentExpression(identifierExpression("IsOnSale",[]),assignmentOperatorAssign(),primitiveExpression(true),)
)]),[],false,[],[modifiersPublic(),],[],[],primitiveType("void")))
,
memberDeclaration(propertyDeclaration("Name",[],accessor([],emptyStatement(),[],[modifiersNone(),],)
,[],[modifiersPublic(),],accessor([],emptyStatement(),[],[modifiersNone(),],)
,primitiveType("string")))
,
memberDeclaration(fieldDeclaration("IsOnSale",[],[],[modifiersPublic(),],[],primitiveType("bool")))
,
memberDeclaration(fieldDeclaration("_price",[],[],[modifiersPrivate(),],[],primitiveType("double")))
,
memberDeclaration(propertyDeclaration("Price",[],accessor([],blockStatementPlaceholder(
[ifElseStatement(identifierExpression("IsOnSale",[]),emptyStatement(),returnStatement(binaryOperatorExpression(identifierExpression("_price",[]),multiply(),primitiveExpression(0.8),)),),
returnStatement(identifierExpression("_price",[]))]),[],[modifiersNone(),],)
,[],[modifiersPublic(),],accessor([],blockStatementPlaceholder(
[expressionStatement(assignmentExpression(identifierExpression("_price",[]),assignmentOperatorAssign(),identifierExpression("value",[]),)
)]),[],[modifiersNone(),],)
,primitiveType("double")))
],[],[modifiersPublic(),],[],))
])
])]